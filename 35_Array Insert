#Complexity is 0(N) - Linear Search
#list is sorted

class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        for i in range(len(nums)):
            if nums[i] >= target:
                return i
        if i == len(nums) - 1:
            return i+1
            
#Time complexity is log(n) - Binary Search

    class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        left = 0
        right = len(nums) - 1        
        while left <= right:
            pivot = (left + right) // 2
            if target == nums[pivot]:
                return pivot;
            elif target < nums[pivot]:
                right = pivot -1
            elif target > nums[pivot]:
                left = pivot + 1
        return left
        
        https://www.youtube.com/watch?v=GnZ9ppr_zaI
